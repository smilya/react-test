{"version":3,"sources":["components/Button.js","components/InputField.js","App.js","redux/initialContent.js","components/Label.js","components/Panel.js","components/Content.js","reportWebVitals.js","index.js"],"names":["Button","caption","width","height","visible","onClick","style","visibility","InputField","label","onChange","className","type","App","useState","initialContent","content","setContent","path","setPath","newValue","setNewValue","getNewContent","oldContent","codeString","eval","e","target","value","newContent","props","Label","Panel","Content","renderElems","elem","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af388c18.chunk.js","sourcesContent":["const Button = ({ caption='button', width, height, visible = true, onClick }) => (\r\n  <button\r\n    style={{\r\n      width: `${width}px`,\r\n      height: `${height}px`,\r\n      visibility: visible ? 'visible' : 'hidden',\r\n    }}\r\n    onClick={onClick}\r\n  >\r\n    {caption}\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import './InputField.css'\r\n\r\nconst InputField = ({label, onChange}) => (\r\n  <label className='inputField'> {label} <br/>\r\n    <input type=\"text\" onChange={onChange} />\r\n  </label>\r\n\r\n)\r\n\r\nexport default InputField","import React, { useState } from 'react';\nimport './App.css';\nimport InputField from './components/InputField';\nimport Button from './components/Button';\nimport Content from './components/Content';\n\nimport initialContent from './redux/initialContent';\n\nfunction App() {\n  const [content, setContent] = useState(initialContent);\n  const [path, setPath] = useState('');\n  const [newValue, setNewValue] = useState('');\n\n  function getNewContent(oldContent, codeString) {\n    const content = [...oldContent];\n    eval(codeString)\n    return content;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <InputField\n          label=\"Путь\"\n          onChange={e => {\n            setPath(e.target.value);\n          }}\n        />\n        <InputField\n          label=\"Новое значение\"\n          onChange={e => {\n            setNewValue(e.target.value);\n          }}\n        />\n        <Button caption=\"Применить\" onClick={() => {\n          const codeString = `${path}=${newValue}`;\n          const newContent = getNewContent(content, codeString);\n          setContent(newContent)\n        }} />\n      </div>\n      <div className=\"content\">\n        <Content content={content} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const content = [\r\n\t{\r\n\t\ttype: 'panel',\r\n\t\tprops: {\r\n\t\t\twidth: 500,\r\n\t\t\theight: 100,\r\n\t\t\tvisible: true\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'label',\r\n\t\tprops: {\r\n\t\t\tcaption: 'test',\r\n\t\t\tvisible: true\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttype: 'button',\r\n\t\tprops: {\r\n\t\t\twidth: 100,\r\n\t\t\theight: 40,\r\n\t\t\tvisible: true\r\n\t\t},\r\n\t}, \t\r\n]\r\n\r\nexport default content","const Label = ({caption='label', visible=true}) => (\r\n  <span style={{\r\n    visibility: visible ? 'visible' : 'hidden',\r\n  }}>{caption}</span>\r\n)\r\n\r\nexport default Label;","import Content from \"./Content\";\r\nimport './Panel.css';\r\n\r\nconst Panel = ({content=[], width, height, visible=true}) => {\r\n  return <div className='Panel' style={{\r\n    width: `${width}px`,\r\n    height: `${height}px`,\r\n    visibility: visible ? 'visible' : 'hidden',\r\n  }}>\r\n    <Content content={content} />\r\n  </div>\r\n}\r\n\r\nexport default Panel;","import './Content.css';\r\nimport Button from './Button';\r\nimport Label from './Label';\r\nimport Panel from './Panel';\r\n\r\nconst Content = ({ content }) => {\r\n  function renderElems(elem) {\r\n    if (elem.type === 'button') {\r\n      return <Button {...elem.props} />;\r\n    }\r\n    if (elem.type === 'label') {\r\n      return <Label {...elem.props} />;\r\n    }\r\n    if (elem.type === 'panel') {\r\n      return <Panel {...elem.props} content={elem.content} />;\r\n    }\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"Content\">\r\n      <ul>\r\n        {content.map((elem, index) => (\r\n          <li key={index}>{renderElems(elem)}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}